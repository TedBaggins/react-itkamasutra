[{"E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\index.js":"1","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\App.js":"2","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\reportWebVitals.js":"3","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Profile\\Profile.jsx":"4","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Header\\Header.jsx":"5","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Navbar\\Navbar.jsx":"6","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Dialogs\\Dialogs.jsx":"7","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Profile\\MyPosts\\MyPosts.jsx":"8","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx":"9","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\News\\News.jsx":"10","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Music\\Music.jsx":"11","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Settings\\Settings.jsx":"12","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx":"13","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx":"14","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Dialogs\\Message\\Message.jsx":"15","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\redux\\profile-reducer.js":"16","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\redux\\sidebar-reducer.js":"17","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\redux\\dialogs-reducer.js":"18","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\redux\\store.js":"19","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\redux\\redux-store.js":"20","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx":"21","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Dialogs\\DialogsContainer.jsx":"22","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Users\\Users.jsx":"23","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\redux\\users-reducer.js":"24","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Users\\UsersContainer.jsx":"25","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\common\\preloader\\Preloader.jsx":"26","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\common\\Preloader\\Preloader.jsx":"27","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Profile\\ProfileContainer.jsx":"28","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\redux\\auth-reducer.js":"29","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Header\\HeaderContainer.jsx":"30","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\api\\api.js":"31","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Login\\Login.jsx":"32","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\hoc\\WithAuthRedirect.js":"33","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx":"34","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\utils\\validators\\validators.js":"35","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\common\\FormsControls\\FormsControls.js":"36","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\redux\\app-reducer.js":"37","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\redux\\users-selectors.js":"38","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx":"39"},{"size":586,"mtime":1610874681834,"results":"40","hashOfConfig":"41"},{"size":2161,"mtime":1610874384397,"results":"42","hashOfConfig":"41"},{"size":362,"mtime":499162500000,"results":"43","hashOfConfig":"41"},{"size":483,"mtime":1610628071701,"results":"44","hashOfConfig":"41"},{"size":899,"mtime":1610805428766,"results":"45","hashOfConfig":"41"},{"size":2425,"mtime":1610877519438,"results":"46","hashOfConfig":"41"},{"size":1987,"mtime":1610773779547,"results":"47","hashOfConfig":"41"},{"size":1648,"mtime":1611108981317,"results":"48","hashOfConfig":"41"},{"size":517,"mtime":1610339252303,"results":"49","hashOfConfig":"41"},{"size":170,"mtime":1609339262902,"results":"50","hashOfConfig":"41"},{"size":171,"mtime":1609339262899,"results":"51","hashOfConfig":"41"},{"size":186,"mtime":1609339262910,"results":"52","hashOfConfig":"41"},{"size":1037,"mtime":1610979925283,"results":"53","hashOfConfig":"41"},{"size":437,"mtime":1610360494911,"results":"54","hashOfConfig":"41"},{"size":272,"mtime":1610360460118,"results":"55","hashOfConfig":"41"},{"size":2686,"mtime":1611124753147,"results":"56","hashOfConfig":"41"},{"size":120,"mtime":1609938791644,"results":"57","hashOfConfig":"41"},{"size":1135,"mtime":1610723561066,"results":"58","hashOfConfig":"41"},{"size":1784,"mtime":1609937247362,"results":"59","hashOfConfig":"41"},{"size":822,"mtime":1610874120774,"results":"60","hashOfConfig":"41"},{"size":622,"mtime":1610724956604,"results":"61","hashOfConfig":"41"},{"size":826,"mtime":1610723585234,"results":"62","hashOfConfig":"41"},{"size":2456,"mtime":1610888149413,"results":"63","hashOfConfig":"41"},{"size":4371,"mtime":1610890721508,"results":"64","hashOfConfig":"41"},{"size":2523,"mtime":1610953524341,"results":"65","hashOfConfig":"41"},{"size":232,"mtime":1610170330910,"results":"66","hashOfConfig":"41"},{"size":232,"mtime":1610170330910,"results":"67","hashOfConfig":"41"},{"size":1803,"mtime":1610877563760,"results":"68","hashOfConfig":"41"},{"size":1961,"mtime":1610873873708,"results":"69","hashOfConfig":"41"},{"size":595,"mtime":1610869673989,"results":"70","hashOfConfig":"41"},{"size":1316,"mtime":1610789257628,"results":"71","hashOfConfig":"41"},{"size":1864,"mtime":1610862683763,"results":"72","hashOfConfig":"41"},{"size":606,"mtime":1610591934738,"results":"73","hashOfConfig":"41"},{"size":1368,"mtime":1610696000648,"results":"74","hashOfConfig":"41"},{"size":287,"mtime":1610773134978,"results":"75","hashOfConfig":"41"},{"size":1580,"mtime":1610863181487,"results":"76","hashOfConfig":"41"},{"size":889,"mtime":1610873969894,"results":"77","hashOfConfig":"41"},{"size":698,"mtime":1610953540162,"results":"78","hashOfConfig":"41"},{"size":1136,"mtime":1611022953092,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"5gjuoy",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"82"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"82"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"82"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"82"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"82"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"165","usedDeprecatedRules":"82"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"82"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\index.js",[],["177","178"],"E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\App.js",[],"E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\reportWebVitals.js",[],"E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Profile\\Profile.jsx",[],"E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Header\\Header.jsx",["179"],"import React from 'react';\r\nimport styles from './Header.module.css';\r\nimport logo from '../../images/header_logo.png';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={styles.header}>\r\n            <div className=\"container\">\r\n                <div className={styles.header__inner}>\r\n                    <div className={styles.header__logo}>\r\n                        <img src={logo}></img>\r\n                    </div>\r\n                    <div className={styles.header__login}>\r\n                        {props.isAuth\r\n                            ? <div><span>{props.login}</span><button onClick={props.logout}>Log out</button></div>\r\n                            : <NavLink to={'/login'}>Login</NavLink>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Navbar\\Navbar.jsx",["180"],"import {NavLink, withRouter} from 'react-router-dom';\r\nimport styles from './Navbar.module.css';\r\nimport {connect} from \"react-redux\";\r\n\r\nconst Navbar = (props) => {\r\n\r\n    // if (!props.isAuth) {\r\n    //     return (\r\n    //         <section className={styles.navbar}>\r\n    //             <nav className={styles.nav}>\r\n    //                 <div className={styles.nav__item}>\r\n    //                     <NavLink to=\"/news\" className={`${styles.nav__link_news} ${styles.nav__link}`} activeClassName={styles.nav__link_active}>News</NavLink>\r\n    //                 </div>\r\n    //             </nav>\r\n    //         </section>\r\n    //     )\r\n    // }\r\n\r\n    return (\r\n        <section className={styles.navbar}>\r\n            <nav className={styles.nav}>\r\n                <div className={`${styles.nav__item} ${styles.active}`}>\r\n                    <NavLink to=\"/profile\" className={`${styles.nav__link_profile} ${styles.nav__link}`} activeClassName={styles.nav__link_active}>Profile</NavLink>\r\n                </div>\r\n                <div className={styles.nav__item}>\r\n                    <NavLink to=\"/dialogs\" className={`${styles.nav__link_messages} ${styles.nav__link}`} activeClassName={styles.nav__link_active}>Messages</NavLink>\r\n                </div>\r\n                <div className={styles.nav__item}>\r\n                    <NavLink to=\"/news\" className={`${styles.nav__link_news} ${styles.nav__link}`} activeClassName={styles.nav__link_active}>News</NavLink>\r\n                </div>\r\n                <div className={styles.nav__item}>\r\n                    <NavLink to=\"/music\" className={`${styles.nav__link_music} ${styles.nav__link}`} activeClassName={styles.nav__link_active}>Music</NavLink>\r\n                </div>\r\n                <div className={styles.nav__item}>\r\n                    <NavLink to=\"/settings\" className={`${styles.nav__link_settings} ${styles.nav__link}`} activeClassName={styles.nav__link_active}>Settings</NavLink>\r\n                </div>\r\n                <div className={styles.nav__item}>\r\n                    <NavLink to=\"/users\" className={`${styles.nav__link_settings} ${styles.nav__link}`} activeClassName={styles.nav__link_active}>Users</NavLink>\r\n                </div>\r\n            </nav>\r\n        </section>\r\n    );\r\n}\r\n\r\n// export default Navbar;\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport default connect(mapStateToProps, {})(Navbar);","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Dialogs\\Dialogs.jsx",["181"],"import DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport styles from './Dialogs.module.css';\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, requiredField} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={styles.dialog__add}>\r\n                <div>\r\n                    <Field component={Textarea}\r\n                           name={\"newMessageField\"}\r\n                           placeholder={\"Enter your message\"}\r\n                           validate={[requiredField, maxLength50]}/>\r\n                </div>\r\n                <div><button>Send</button></div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);\r\n\r\nconst Dialogs = (props) => {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogsData.map( dialog => {\r\n        return <DialogItem name={dialog.name} key={dialog.id} id={dialog.id} />\r\n    });\r\n    let messagesElements = state.messagesData.map( message => {\r\n        return <Message message={message.message} key={message.id} />\r\n    });\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageField);\r\n    }\r\n\r\n    return (\r\n        <section className={styles.dialogs}>\r\n            <div className={styles.dialogs__users}>\r\n                { dialogsElements }\r\n            </div>\r\n            <div className={styles.dialog__messages}>\r\n                <div className={styles.dialog__box}>{ messagesElements }</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Profile\\MyPosts\\MyPosts.jsx",["182","183"],"E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Profile\\MyPosts\\Post\\Post.jsx",["184"],"import s from './Post.module.css';\r\nimport user_default from '../../../../images/user_default.png';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <div className={s.post__message_wrap}>\r\n                <img src={user_default}/>\r\n                {props.message}\r\n            </div>\r\n            <div className={s.post__like_wrap}>\r\n                <span className={s.post__like}>{props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\News\\News.jsx",["185"],"import s from './News.module.css';\r\n\r\nconst News = (props) => {\r\n    return (\r\n        <div>\r\n            Новости\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Music\\Music.jsx",["186"],"import s from './Music.module.css';\r\n\r\nconst Music = (props) => {\r\n    return (\r\n        <div>\r\n            Музыка\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Settings\\Settings.jsx",["187"],"import s from './Settings.module.css';\r\n\r\nconst Settings = (props) => {\r\n    return (\r\n        <div>\r\n            Настройки\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.jsx",["188","189"],"E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Dialogs\\DialogItem\\DialogItem.jsx",["190"],"import {NavLink} from 'react-router-dom';\r\nimport s from '../Dialogs.module.css';\r\nimport user_default_photo from '../../../images/user_default.png';\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n    return (\r\n        <div className={s.dialogs__user}>\r\n            <img src={user_default_photo}/>\r\n            <NavLink to={path}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Dialogs\\Message\\Message.jsx",[],"E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\redux\\profile-reducer.js",["191"],"E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\redux\\sidebar-reducer.js",[],"E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\redux\\dialogs-reducer.js",[],"E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\redux\\store.js",[],["192","193"],"E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\redux\\redux-store.js",[],"E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Profile\\MyPosts\\MyPostsContainer.jsx",["194"],"import React from 'react';\r\nimport {addPostActionCreator} from '../../../redux/profile-reducer';\r\nimport MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPost) => {\r\n            dispatch(addPostActionCreator(newPost));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Dialogs\\DialogsContainer.jsx",["195"],"import Dialogs from './Dialogs';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport { connect } from 'react-redux';\r\nimport React from \"react\";\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessage) => {\r\n            dispatch(sendMessageCreator(newMessage));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose( // возвращает \"DialogsContainer\"\r\n    connect(mapStateToProps, mapDispatchToProps), // рез-т вызова withAuthRedirect закидывается сюда\r\n    withAuthRedirect // Dialogs сперва закидывается сюда\r\n)(Dialogs)","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Users\\Users.jsx",["196","197"],"import React from 'react';\r\nimport styles from './Users.module.css';\r\nimport userPhoto from '../../images/user_default.png';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Users = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n    let pages = [];\r\n    for (let i=1; i<=pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    return (\r\n        <section className={styles.users}>\r\n            <div className={styles.users__pages}>\r\n                {pages.map(p => {\r\n                    if (p > 20) {\r\n                        return;\r\n                    }\r\n                    return <span onClick={(e) => {props.onPageChange(p)}} className={props.currentPage === p && styles.selectedPage}>{p}</span>\r\n                })}          \r\n            </div>\r\n            {\r\n                props.users.map( u => {\r\n                    return <div key={u.id} className={styles.users__item}>\r\n                        <div className={styles.users__box_photo_name}>\r\n                            <div className={styles.users__photo}>\r\n                                <NavLink to={'/profile/' + u.id}>\r\n                                    <img className={styles.userPhoto} src={ u.photos.small != null ? u.photos.small : userPhoto}></img>\r\n                                </NavLink>\r\n                            </div>\r\n                            <div className={styles.users__name_status}>\r\n                                <div className={styles.users__name}>{u.name}</div>\r\n                                <div>{u.status != null ? u.status : \"status\" }</div>\r\n                            </div>\r\n                        </div>\r\n                        <div className={styles.users__box_follow}>\r\n                            <div className={styles.users__follow}>\r\n                                { u.followed\r\n                                    ? <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                              onClick={() => {props.unfollow(u.id);}}>Unfollow</button>\r\n                                    : <button disabled={props.followingInProgress.some(id => id === u.id)}\r\n                                              onClick={() => {props.follow(u.id);}}>Follow</button> }\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                })\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Users;","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\redux\\users-reducer.js",["198"],"import {usersAPI} from \"../api/api\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET-USERS';\r\nconst SET_CURRENT_PAGE = 'SET-CURRENT-PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS-COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING';\r\nconst TOGGLE_FOLLOWING_PROGRESS = 'TOGGLE-FOLLOWING-PROGRESS';\r\n\r\nlet initialState = { \r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followingInProgress: []\r\n}\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW: \r\n            return { \r\n                ...state, \r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: true}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW: \r\n            return { \r\n                ...state, \r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return {...u, followed: false}\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS: \r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case SET_CURRENT_PAGE: \r\n            return {\r\n                ...state,\r\n                currentPage: action.currentPage\r\n            }\r\n        case SET_TOTAL_USERS_COUNT: \r\n            return {\r\n                ...state,\r\n                totalUsersCount: action.count\r\n            }\r\n        case TOGGLE_IS_FETCHING: \r\n            return {\r\n                ...state, \r\n                isFetching: action.isFetching\r\n            }\r\n        case TOGGLE_FOLLOWING_PROGRESS:\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id != action.userId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId: userId\r\n    }\r\n}\r\nexport const unfollowSuccess = (userId) => {\r\n    return {\r\n        type: UNFOLLOW, \r\n        userId: userId\r\n    }\r\n}\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS, \r\n        users: users\r\n    }\r\n}\r\nexport const setCurrentPage = (currentPage) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        currentPage: currentPage\r\n    }\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount) => {\r\n    return {\r\n        type: SET_TOTAL_USERS_COUNT,\r\n        count: totalUsersCount\r\n    }\r\n}\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching: isFetching\r\n    }\r\n}\r\nexport const toggleFollowingProgress = (isFetching, userId) => {\r\n    return {\r\n        type: TOGGLE_FOLLOWING_PROGRESS,\r\n        isFetching: isFetching,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const getUsers = (page, pageSize) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        // dispatch(setCurrentPage(page));\r\n        usersAPI.getUsers(page, pageSize).then(data => {\r\n            dispatch(toggleIsFetching(false));\r\n            dispatch(setUsers(data.items));\r\n            dispatch(setTotalUsersCount(data.totalCount));\r\n        });\r\n    }\r\n}\r\nexport const follow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.follow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(followSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\nexport const unfollow = (userId) => {\r\n    return (dispatch) => {\r\n        dispatch(toggleFollowingProgress(true, userId));\r\n        usersAPI.unfollow(userId)\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(unfollowSuccess(userId));\r\n                }\r\n                dispatch(toggleFollowingProgress(false, userId));\r\n            });\r\n    }\r\n}\r\n","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Users\\UsersContainer.jsx",[],"E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\common\\preloader\\Preloader.jsx",["199"],"E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\common\\Preloader\\Preloader.jsx",["200"],"import React from 'react';\r\nimport preloader from '../../../images/Rolling-2s-197px.svg';\r\n\r\nconst Preloader = (props) => {\r\n    return (\r\n        <div><img width='50px' src={preloader}/></div>\r\n    )\r\n}\r\n\r\nexport default Preloader;","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Profile\\ProfileContainer.jsx",["201"],"import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux';\r\nimport {getUserProfile, getUserStatus, updateUserStatus} from '../../redux/profile-reducer';\r\nimport {withRouter} from 'react-router-dom';\r\nimport {withAuthRedirect} from \"../../hoc/WithAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId;\r\n        if(!userId) {\r\n            userId = this.props.authorizedUserId; // 13921, 2\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}\r\n                     status={this.props.status} updateUserStatus={this.props.updateUserStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n// let AuthRedirectComponent = withAuthRedirect(ProfileContainer);\r\n// let WithUrlDataContainerComponent = withRouter(AuthRedirectComponent);\r\n// export default connect(mapStateToProps, {getUserProfile}) (WithUrlDataContainerComponent);\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus}), // рез-т вызова withRouter закидывается сюда\r\n    withRouter, // рез-т вызова withAuthRedirect закидывается сюда\r\n    //withAuthRedirect // ProfileContainer сперва закидывается сюда\r\n)(ProfileContainer);\r\n\r\n","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\redux\\auth-reducer.js",[],"E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Header\\HeaderContainer.jsx",["202"],"import React from 'react';\r\nimport s from './Header.module.css';\r\nimport Header from './Header';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../redux/auth-reducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n\r\n    // componentDidMount() {\r\n    //     this.props.getAuthUserData();\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <Header {...this.props}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\api\\api.js",[],"E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Login\\Login.jsx",[],"E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\hoc\\WithAuthRedirect.js",[],"E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Profile\\ProfileInfo\\ProfileStatus.jsx",["203"],"import React from 'react';\r\nimport styles from './ProfileInfo.module.css';\r\n\r\nclass ProfileStatus extends React.Component {\r\n\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status\r\n    }\r\n\r\n    activateEditMode = () => {\r\n        this.setState({editMode: true});\r\n    }\r\n    deactivateEditMode = () => {\r\n        this.setState({editMode: false});\r\n        this.props.updateUserStatus(this.state.status);\r\n    }\r\n    onStatusChange = (e) => {\r\n        this.setState({\r\n            status: e.currentTarget.value\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps,prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {!this.state.editMode\r\n                ?\r\n                    <div>\r\n                        <span onDoubleClick={this.activateEditMode}>{this.props.status || \"empty status\"}</span>\r\n                    </div>\r\n                :\r\n\r\n                    <div>\r\n                        <input onChange={this.onStatusChange} autoFocus={\"true\"} onBlur={this.deactivateEditMode} value={this.state.status} type=\"text\"/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\utils\\validators\\validators.js",[],"E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\common\\FormsControls\\FormsControls.js",[],"E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\redux\\app-reducer.js",["204","205"],"import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZATION_SUCCESS = 'INITIALIZATION-SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport const appReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case INITIALIZATION_SUCCESS:\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializationSuccess = () => {\r\n    return {\r\n        type: INITIALIZATION_SUCCESS\r\n    }\r\n}\r\n\r\nexport const initializeApp = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(getAuthUserData());\r\n        Promise.all([promise])\r\n            .then(() => {\r\n                dispatch(initializationSuccess());\r\n            });\r\n    }\r\n}\r\n","E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\redux\\users-selectors.js",[],"E:\\Programs\\OpenServer\\OpenServer\\domains\\react-itkamasutra\\project-one\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.jsx",["206"],{"ruleId":"207","replacedBy":"208"},{"ruleId":"209","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":12,"column":25,"nodeType":"213","endLine":12,"endColumn":41},{"ruleId":"214","severity":1,"message":"215","line":1,"column":18,"nodeType":"216","messageId":"217","endLine":1,"endColumn":28},{"ruleId":"214","severity":1,"message":"218","line":39,"column":9,"nodeType":"216","messageId":"217","endLine":39,"endColumn":23},{"ruleId":"214","severity":1,"message":"219","line":5,"column":27,"nodeType":"216","messageId":"217","endLine":5,"endColumn":40},{"ruleId":"214","severity":1,"message":"220","line":36,"column":9,"nodeType":"216","messageId":"217","endLine":36,"endColumn":23},{"ruleId":"211","severity":1,"message":"212","line":8,"column":17,"nodeType":"213","endLine":8,"endColumn":42},{"ruleId":"214","severity":1,"message":"221","line":1,"column":8,"nodeType":"216","messageId":"217","endLine":1,"endColumn":9},{"ruleId":"214","severity":1,"message":"221","line":1,"column":8,"nodeType":"216","messageId":"217","endLine":1,"endColumn":9},{"ruleId":"214","severity":1,"message":"221","line":1,"column":8,"nodeType":"216","messageId":"217","endLine":1,"endColumn":9},{"ruleId":"214","severity":1,"message":"222","line":4,"column":8,"nodeType":"216","messageId":"217","endLine":4,"endColumn":21},{"ruleId":"211","severity":1,"message":"212","line":18,"column":17,"nodeType":"213","endLine":20,"endColumn":41},{"ruleId":"211","severity":1,"message":"212","line":9,"column":13,"nodeType":"213","endLine":9,"endColumn":44},{"ruleId":"223","severity":1,"message":"224","line":34,"column":61,"nodeType":"225","messageId":"226","endLine":34,"endColumn":63},{"ruleId":"207","replacedBy":"227"},{"ruleId":"209","replacedBy":"228"},{"ruleId":"214","severity":1,"message":"229","line":1,"column":8,"nodeType":"216","messageId":"217","endLine":1,"endColumn":13},{"ruleId":"214","severity":1,"message":"229","line":4,"column":8,"nodeType":"216","messageId":"217","endLine":4,"endColumn":13},{"ruleId":"230","severity":1,"message":"231","line":19,"column":25,"nodeType":"232","messageId":"233","endLine":19,"endColumn":32},{"ruleId":"211","severity":1,"message":"212","line":30,"column":37,"nodeType":"213","endLine":30,"endColumn":130},{"ruleId":"223","severity":1,"message":"224","line":67,"column":65,"nodeType":"225","messageId":"226","endLine":67,"endColumn":67},{"ruleId":"211","severity":1,"message":"212","line":5,"column":14,"nodeType":"213","endLine":5,"endColumn":49},{"ruleId":"211","severity":1,"message":"212","line":6,"column":14,"nodeType":"213","endLine":6,"endColumn":49},{"ruleId":"214","severity":1,"message":"234","line":6,"column":9,"nodeType":"216","messageId":"217","endLine":6,"endColumn":25},{"ruleId":"214","severity":1,"message":"221","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":9},{"ruleId":"214","severity":1,"message":"235","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":14},{"ruleId":"214","severity":1,"message":"236","line":1,"column":9,"nodeType":"216","messageId":"217","endLine":1,"endColumn":16},{"ruleId":"214","severity":1,"message":"237","line":2,"column":9,"nodeType":"216","messageId":"217","endLine":2,"endColumn":19},{"ruleId":"214","severity":1,"message":"235","line":2,"column":8,"nodeType":"216","messageId":"217","endLine":2,"endColumn":14},"no-native-reassign",["238"],"no-negated-in-lhs",["239"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","'newMessageBody' is assigned a value but never used.","'requiredField' is defined but never used.","'newPostElement' is assigned a value but never used.","'s' is defined but never used.","'ProfileStatus' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["238"],["239"],"'React' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'withAuthRedirect' is defined but never used.","'styles' is defined but never used.","'authAPI' is defined but never used.","'stopSubmit' is defined but never used.","no-global-assign","no-unsafe-negation"]